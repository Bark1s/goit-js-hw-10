{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n\nconst dateTimeInput = document.querySelector(\"#datetime-picker\");\nconst startButton = document.querySelector(\"button\");\nconst timerDays = document.querySelector(\".value[data-days]\");\nconst timerHours = document.querySelector(\".value[data-hours]\");\nconst timerMinutes = document.querySelector(\".value[data-minutes]\");\nconst timerSeconds = document.querySelector(\".value[data-seconds]\");  \nstartButton.disabled = true;\n\nlet userSelectedDate;\nlet timerTime;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n    onClose(selectedDates) {\n        const dateToUnix = selectedDates[0].getTime();\n        if (dateToUnix < Date.now()) {\n            iziToast.show({\n                title: 'Warning',\n                message: 'Please choose a date in the future',\n                color: 'red',\n                position: 'topCenter',\n            });\n            startButton.disabled = true;\n        } else {\n            userSelectedDate = dateToUnix;\n            startButton.disabled = false;\n            timerTime = dateToUnix - Date.now();\n        }\n        console.log(selectedDates[0]);\n  },\n};\n\nflatpickr(dateTimeInput, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartButton.addEventListener(\"click\", () => {\n    startButton.disabled = true;\n    dateTimeInput.disabled = true;\n    let startCount = setInterval(() => {\n        if (timerTime > 1000) {\n            timerTime = timerTime - 1000;\n            let conv = convertMs(timerTime)\n            timerDays.innerHTML = conv.days.toString().padStart(2, '0');\n            timerHours.innerHTML = conv.hours.toString().padStart(2, '0');\n            timerMinutes.innerHTML = conv.minutes.toString().padStart(2, '0');\n            timerSeconds.innerHTML = conv.seconds.toString().padStart(2, '0');\n        } else {\n            return;\n        }\n    }, 1000)\n}\n)"],"names":["dateTimeInput","startButton","timerDays","timerHours","timerMinutes","timerSeconds","timerTime","options","selectedDates","dateToUnix","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","conv"],"mappings":"+IAQA,MAAMA,EAAgB,SAAS,cAAc,kBAAkB,EACzDC,EAAc,SAAS,cAAc,QAAQ,EAC7CC,EAAY,SAAS,cAAc,mBAAmB,EACtDC,EAAa,SAAS,cAAc,oBAAoB,EACxDC,EAAe,SAAS,cAAc,sBAAsB,EAC5DC,EAAe,SAAS,cAAc,sBAAsB,EAClEJ,EAAY,SAAW,GAGvB,IAAIK,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACf,QAAQC,EAAe,CACnB,MAAMC,EAAaD,EAAc,CAAC,EAAE,QAAO,EACvCC,EAAa,KAAK,OAClBC,EAAS,KAAK,CACV,MAAO,UACP,QAAS,qCACT,MAAO,MACP,SAAU,WAC1B,CAAa,EACDT,EAAY,SAAW,KAGvBA,EAAY,SAAW,GACvBK,EAAYG,EAAa,KAAK,OAElC,QAAQ,IAAID,EAAc,CAAC,CAAC,CACjC,CACH,EAEAG,EAAUX,EAAeO,CAAO,EAEhC,SAASK,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAhB,EAAY,iBAAiB,QAAS,IAAM,CACxCA,EAAY,SAAW,GACvBD,EAAc,SAAW,GACR,YAAY,IAAM,CAC/B,GAAIM,EAAY,IAAM,CAClBA,EAAYA,EAAY,IACxB,IAAIY,EAAON,EAAUN,CAAS,EAC9BJ,EAAU,UAAYgB,EAAK,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC1Df,EAAW,UAAYe,EAAK,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC5Dd,EAAa,UAAYc,EAAK,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAChEb,EAAa,UAAYa,EAAK,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CAC5E,KACY,OAEP,EAAE,GAAI,CACX,CACA"}